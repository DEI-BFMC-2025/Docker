services:
  ros:
    build:
      context: .
      dockerfile: Dockerfile.noetic
    image: bfmc2025
    container_name: bfmc2025_container
    volumes:
      - /tmp:/tmp
      - /home/${USER}/Desktop/Brain/brain/src:/catkin_ws/src
      - /dev/shm:/dev/shm
      - /run/udev:/run/udev:ro

    working_dir: /catkin_ws/src/smart
    tty: true
    privileged: true
    environment:
      - DISPLAY=$DISPLAY 
      - ROS_DISTRO=noetic
      - LD_LIBRARY_PATH=/opt/vc/lib
    devices:
      - /dev:/dev
      - /dev/ttyACM0:/dev/ttyACM0
      - /dev/ttyACM1:/dev/ttyACM1
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1

    command: tail -f /dev/null

# We run on the host the camera now    
#  picamera:
#    build:
#      context: .
#      dockerfile: Dockerfile.picamera
#    image: bfmc2025_picamera2
#    container_name: bfmc2025_picamera2_container
#    volumes:
#      - /tmp:/tmp
#      - /run/udev:/run/udev:ro
#      - ./picam:/app
#    devices:
#      - /dev:/dev
#    working_dir: /app
#    tty: true
#    privileged: true
#    command: tail -f /dev/null #bash -c "python3 camera_server.py" 
#    restart: unless-stopped               # automatic restart policy
#    shm_size: '1gb'


volumes:
  shared-volume:
    driver: local
